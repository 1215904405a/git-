1、clone
git clone project.git project2
cd project2
git submodule init
git submodule update
2、cd project1/moduleA //修改
git branch
echo "This is a submodule." > b.txt
git add .
git commit -m "add b.txt"
git push origin master
cd ..
git status
git diff
git add .
git commit -m "update submodule add b.txt"
git push origin master
cd ..
3、cd project2 //更新
git pull
git submodule update
git submodule update --init --recursive //多个依赖
cd ..
4、删除
git rm --cached moduleA
rm -rf moduleA
rm .gitmodules
vim .git/config



几个命令：
添加子模块
git submodule add GIT_REPO DIR

移除子模块
git rm the_submodule
rm -rf .git/modules/the_submodule

子模块还原(放弃子模块的最近提交)
git submodule update

递归更新子模块
git submodule update --init --recursive


删除子模块：（分4步走）

1) $ git rm --cached [path] 

根据路径删除子模块的记录

2) 编辑“.gitmodules”文件，将子模块的相关配置节点删除掉 

清理子模块配置

3) 编辑“ .git/config”文件，将子模块的相关配置节点删除掉 

清理子模块配置

4) 手动删除子模块残留的目录 

清理脏文件
